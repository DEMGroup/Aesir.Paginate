name: Publish, and release Aesir.Paginate

on:
  workflow_dispatch:
    inputs:
      semver:
        description: "How would you bump the version (semver)? (e.g. major, minor, patch)"
        required: false
        type: choice
        options:
          - patch
          - minor
          - major
      suffix:
        description: "Should we suffix the version (-beta, -alpha, -rc#)?"
        required: false
        type: string
        default: ""
  pull_request:
    branches: [main]
    types: [closed]

env:
  NUGET_ENABLE_LEGACY_CSPROJ_PACK: true
  DOTNET_VERSION: 8.0.x

jobs:
  bump-version:
    uses: DEMGroup/.github/.github/workflows/bump-version.yml@main
    secrets: inherit
    with:
      semver: ${{ inputs.semver || 'patch' }}

  build-and-test:
    uses: ./.github/workflows/build.yml

  release:
    needs: [build-and-test, bump-version]
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIG: "Release"
      SOLUTION: "Aesir.Paginate.sln"
      PACKAGE: "Aesir.Paginatey"
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2
        with:
          nuget-version: "latest"

      - name: Setup .NET Core SDK ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore -r linux-x64

      - name: Build
        run: dotnet build --no-restore -v=q --configuration Release /p:Version=${{needs.bump-version.outputs.new_version}}${{ inputs.suffix }}

      # Package the build into a single nupkg/supkg
      - name: Pack
        run: dotnet pack ${{ env.PACKAGE }}/${{ env.PACKAGE }}.csproj --output . --no-build --no-restore --configuration Release /p:PackageVersion=${{needs.bump-version.outputs.new_version}}${{ inputs.suffix }} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg

      - name: Push Debug Packages
        if: inputs.suffix != ''
        run: |
          dotnet nuget add source --username DEMGroup --password ${GH_TOKEN} --store-password-in-clear-text --name github.com "https://nuget.pkg.github.com/DEMGroup/index.json"
          dotnet nuget push ${{ env.PACKAGE }}.${{needs.bump-version.outputs.new_version}}${{inputs.suffix}}.nupkg --api-key ${GH_TOKEN} --source github.com
          dotnet nuget push ${{ env.PACKAGE }}.${{needs.bump-version.outputs.new_version}}${{inputs.suffix}}.snupkg --api-key ${GH_TOKEN} --source github.com

      - name: Push
        if: inputs.suffix == ''
        run: |
          dotnet nuget push ${{ env.PACKAGE }}.${{needs.bump-version.outputs.new_version}}${{ inputs.suffix }}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }}
          dotnet nuget push ${{ env.PACKAGE }}.${{needs.bump-version.outputs.new_version}}${{ inputs.suffix }}.snupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }}

  create-new-github-release:
    needs: [release, bump-version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow --tags
      - name: Push New Tag (temp manual because actions-ecosystem/action-push-tag@v1 is broken)
        run: |
          message='${{needs.bump-version.outputs.new_version_with_v}}${{ inputs.suffix }}: Sha #${{ github.sha }}'
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "${{needs.bump-version.outputs.new_version_with_v}}${{ inputs.suffix }}" -m "${message}"
          git push origin "${{needs.bump-version.outputs.new_version_with_v}}${{ inputs.suffix }}"
          gh release create --generate-notes "${{needs.bump-version.outputs.new_version_with_v}}${{ inputs.suffix }}"

      - name: Add release summary
        run: |
          echo '### New version released! :rocket:' >> $GITHUB_STEP_SUMMARY
          echo 'Version number: ${{needs.bump-version.outputs.new_version_with_v}}${{ inputs.suffix }}' >> $GITHUB_STEP_SUMMARY
